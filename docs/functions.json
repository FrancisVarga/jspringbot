[{"name":"equals","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean equals(java.lang.String,java.lang.String)"},{"name":"indexOf","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int indexOf(java.lang.String,java.lang.String)"},{"name":"length","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int length(java.lang.String)"},{"name":"isEmpty","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isEmpty(java.lang.String)"},{"name":"equalsIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean equalsIgnoreCase(java.lang.String,java.lang.String)"},{"name":"startsWith","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean startsWith(java.lang.String,java.lang.String)"},{"name":"endsWith","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean endsWith(java.lang.String,java.lang.String)"},{"name":"lastIndexOf","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int lastIndexOf(java.lang.String,java.lang.String)"},{"name":"replace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)"},{"name":"contains","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean contains(java.lang.String,java.lang.String)"},{"name":"split","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] split(java.lang.String)"},{"name":"trim","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String trim(java.lang.String)"},{"name":"remove","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String remove(java.lang.String,java.lang.String)"},{"name":"reverse","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String reverse(java.lang.String)"},{"name":"isWhitespace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isWhitespace(java.lang.String)"},{"name":"clean","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String clean(java.lang.String)"},{"name":"escape","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String escape(java.lang.String)"},{"name":"isAlpha","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isAlpha(java.lang.String)"},{"name":"left","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String left(java.lang.String,int)"},{"name":"right","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String right(java.lang.String,int)"},{"name":"difference","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String difference(java.lang.String,java.lang.String)"},{"name":"repeat","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String repeat(java.lang.String,int)"},{"name":"startsWithIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean startsWithIgnoreCase(java.lang.String,java.lang.String)"},{"name":"endsWithIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean endsWithIgnoreCase(java.lang.String,java.lang.String)"},{"name":"capitalize","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String capitalize(java.lang.String)"},{"name":"uncapitalize","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String uncapitalize(java.lang.String)"},{"name":"containsAny","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean containsAny(java.lang.String,java.lang.String)"},{"name":"isNotBlank","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isNotBlank(java.lang.String)"},{"name":"isBlank","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isBlank(java.lang.String)"},{"name":"isNotEmpty","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isNotEmpty(java.lang.String)"},{"name":"trimToNull","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String trimToNull(java.lang.String)"},{"name":"trimToEmpty","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String trimToEmpty(java.lang.String)"},{"name":"strip","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String strip(java.lang.String)"},{"name":"stripToNull","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String stripToNull(java.lang.String)"},{"name":"stripToEmpty","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String stripToEmpty(java.lang.String)"},{"name":"stripStart","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String stripStart(java.lang.String,java.lang.String)"},{"name":"stripEnd","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String stripEnd(java.lang.String,java.lang.String)"},{"name":"ordinalIndexOf","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int ordinalIndexOf(java.lang.String,java.lang.String,int)"},{"name":"containsIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean containsIgnoreCase(java.lang.String,java.lang.String)"},{"name":"indexOfAny","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int indexOfAny(java.lang.String,java.lang.String)"},{"name":"indexOfAnyBut","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int indexOfAnyBut(java.lang.String,java.lang.String)"},{"name":"containsOnly","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean containsOnly(java.lang.String,java.lang.String)"},{"name":"containsNone","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean containsNone(java.lang.String,java.lang.String)"},{"name":"mid","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String mid(java.lang.String,int,int)"},{"name":"substringBefore","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String substringBefore(java.lang.String,java.lang.String)"},{"name":"substringAfter","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String substringAfter(java.lang.String,java.lang.String)"},{"name":"substringBeforeLast","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String substringBeforeLast(java.lang.String,java.lang.String)"},{"name":"substringAfterLast","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String substringAfterLast(java.lang.String,java.lang.String)"},{"name":"substringBetween","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String substringBetween(java.lang.String,java.lang.String)"},{"name":"substringsBetween","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String)"},{"name":"getNestedString","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String getNestedString(java.lang.String,java.lang.String)"},{"name":"splitByWholeSeparator","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String)"},{"name":"splitByWholeSeparatorPreserveAllTokens1","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)"},{"name":"splitPreserveAllTokens","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String)"},{"name":"splitByCharacterType","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] splitByCharacterType(java.lang.String)"},{"name":"splitByCharacterTypeCamelCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String)"},{"name":"deleteSpaces","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String deleteSpaces(java.lang.String)"},{"name":"deleteWhitespace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String deleteWhitespace(java.lang.String)"},{"name":"removeStart","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String removeStart(java.lang.String,java.lang.String)"},{"name":"removeStartIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String)"},{"name":"removeEnd","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String removeEnd(java.lang.String,java.lang.String)"},{"name":"removeEndIgnoreCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String)"},{"name":"replaceOnce","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)"},{"name":"replaceChars","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String)"},{"name":"overlayString","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String overlayString(java.lang.String,java.lang.String,int,int)"},{"name":"overlay","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String overlay(java.lang.String,java.lang.String,int,int)"},{"name":"chop","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String chop(java.lang.String)"},{"name":"chopNewline","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String chopNewline(java.lang.String)"},{"name":"rightPad","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String rightPad(java.lang.String,int,java.lang.String)"},{"name":"leftPad","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String leftPad(java.lang.String,int,java.lang.String)"},{"name":"center","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String center(java.lang.String,int,java.lang.String)"},{"name":"upperCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String upperCase(java.lang.String)"},{"name":"lowerCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String lowerCase(java.lang.String)"},{"name":"capitalise","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String capitalise(java.lang.String)"},{"name":"uncapitalise","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String uncapitalise(java.lang.String)"},{"name":"swapCase","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String swapCase(java.lang.String)"},{"name":"capitaliseAllWords","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String capitaliseAllWords(java.lang.String)"},{"name":"countMatches","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int countMatches(java.lang.String,java.lang.String)"},{"name":"isAlphaSpace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isAlphaSpace(java.lang.String)"},{"name":"isAlphanumeric","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isAlphanumeric(java.lang.String)"},{"name":"isAlphanumericSpace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isAlphanumericSpace(java.lang.String)"},{"name":"isAsciiPrintable","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isAsciiPrintable(java.lang.String)"},{"name":"isNumeric","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isNumeric(java.lang.String)"},{"name":"isNumericSpace","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"boolean isNumericSpace(java.lang.String)"},{"name":"defaultString","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String defaultString(java.lang.String,java.lang.String)"},{"name":"defaultIfEmpty","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String defaultIfEmpty(java.lang.String,java.lang.String)"},{"name":"reverseDelimited","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String reverseDelimited(java.lang.String,char)"},{"name":"reverseDelimitedString","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String reverseDelimitedString(java.lang.String,java.lang.String)"},{"name":"abbreviate","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"java.lang.String abbreviate(java.lang.String,int)"},{"name":"indexOfDifference","prefix":null,"description":null,"functionClass":"org.apache.commons.lang.StringUtils","functionSignature":"int indexOfDifference(java.lang.String,java.lang.String)"},{"name":"asList","prefix":"array","description":"\n      Returns a fixed-size list backed by the specified array. (Changes to the returned list \"write through\" to the array.) This method acts as bridge between array-based and collection-based APIs, in combination with Collection.toArray(). The returned list is serializable and implements RandomAccess.\n\n      This method also provides a convenient way to create a fixed-size list initialized to contain several elements:\n\n      Example:\n      | EL Add Variable | list | $[array:asList('a','b','c')]\n      | EL Should Be Equal | $['a'] | $[list[0]] |\n    ","functionClass":"java.util.Arrays","functionSignature":"java.util.List asList(java.lang.Object[])"},{"name":"get","prefix":"col","description":"\n      Returns the element at the specified position in this list.\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.lang.Object get(java.lang.Object,int)"},{"name":"isEmpty","prefix":"col","description":"\n      Returns true if this list contains no elements.\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isEmpty(java.util.Collection)"},{"name":"size","prefix":"col","description":"\n      Returns the number of elements in this list.\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"int size(java.lang.Object)"},{"name":"removeAll","prefix":"col","description":"\n      Removes from this list all the elements that are contained in the specified collection.\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection removeAll(java.util.Collection,java.util.Collection)"},{"name":"retainAll","prefix":"col","description":"\n      Retains only the elements in this list that are contained in the specified collection.\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection retainAll(java.util.Collection,java.util.Collection)"},{"name":"index","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.lang.Object index(java.lang.Object,java.lang.Object)"},{"name":"subtract","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection subtract(java.util.Collection,java.util.Collection)"},{"name":"union","prefix":"col","description":null,"functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection union(java.util.Collection,java.util.Collection)"},{"name":"intersection","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection intersection(java.util.Collection,java.util.Collection)"},{"name":"containsAny","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean containsAny(java.util.Collection,java.util.Collection)"},{"name":"isFull","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isFull(java.util.Collection)"},{"name":"isNotEmpty","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isNotEmpty(java.util.Collection)"},{"name":"disjunction","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection disjunction(java.util.Collection,java.util.Collection)"},{"name":"isSubCollection","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isSubCollection(java.util.Collection,java.util.Collection)"},{"name":"isProperSubCollection","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isProperSubCollection(java.util.Collection,java.util.Collection)"},{"name":"isEqualCollection","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean isEqualCollection(java.util.Collection,java.util.Collection)"},{"name":"addIgnoreNull","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean addIgnoreNull(java.util.Collection,java.lang.Object)"},{"name":"sizeIsEmpty","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"boolean sizeIsEmpty(java.lang.Object)"},{"name":"reverseArray","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"void reverseArray(java.lang.Object[])"},{"name":"typedCollection","prefix":"col","description":"\n\n    ","functionClass":"org.apache.commons.collections.CollectionUtils","functionSignature":"java.util.Collection typedCollection(java.util.Collection,java.lang.Class)"},{"name":"getObject","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Object getObject(java.util.Map,java.lang.Object)"},{"name":"getBoolean","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Boolean getBoolean(java.util.Map,java.lang.Object)"},{"name":"getLong","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Long getLong(java.util.Map,java.lang.Object,java.lang.Long)"},{"name":"getFloat","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Float getFloat(java.util.Map,java.lang.Object,java.lang.Float)"},{"name":"getDouble","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Double getDouble(java.util.Map,java.lang.Object,java.lang.Double)"},{"name":"isEmpty","prefix":"map","description":"\n      Returns true if this map contains no key-value mappings.\n    ","functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"boolean isEmpty(java.util.Map)"},{"name":"getInteger","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.Integer getInteger(java.util.Map,java.lang.Object)"},{"name":"getString","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"java.lang.String getString(java.util.Map,java.lang.Object)"},{"name":"getBooleanValue","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"boolean getBooleanValue(java.util.Map,java.lang.Object)"},{"name":"isNotEmpty","prefix":"map","description":"\n      Returns true if this map contains key-value mappings.\n    ","functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"boolean isNotEmpty(java.util.Map)"},{"name":"getIntValue","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"int getIntValue(java.util.Map,java.lang.Object)"},{"name":"getLongValue","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"long getLongValue(java.util.Map,java.lang.Object)"},{"name":"getFloatValue","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"float getFloatValue(java.util.Map,java.lang.Object)"},{"name":"getDoubleValue","prefix":"map","description":null,"functionClass":"org.apache.commons.collections.MapUtils","functionSignature":"double getDoubleValue(java.util.Map,java.lang.Object)"},{"name":"absLong","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"long abs(long)"},{"name":"absDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double abs(double)"},{"name":"absFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float abs(float)"},{"name":"absInteger","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int abs(int)"},{"name":"sin","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double sin(double)"},{"name":"cos","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double cos(double)"},{"name":"tan","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double tan(double)"},{"name":"atan2","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double atan2(double,double)"},{"name":"sqrt","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double sqrt(double)"},{"name":"log","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double log(double)"},{"name":"log10","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double log10(double)"},{"name":"pow","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double pow(double,double)"},{"name":"exp","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double exp(double)"},{"name":"minDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double min(double,double)"},{"name":"minFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float min(float,float)"},{"name":"minLong","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"long min(long,long)"},{"name":"minInteger","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int min(int,int)"},{"name":"maxFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float max(float,float)"},{"name":"maxLong","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"long max(long,long)"},{"name":"maxInteger","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int max(int,int)"},{"name":"maxDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double max(double,double)"},{"name":"scalbFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float scalb(float,int)"},{"name":"scalbDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double scalb(double,int)"},{"name":"getExponentDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int getExponent(double)"},{"name":"getExponentFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int getExponent(float)"},{"name":"signumFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float signum(float)"},{"name":"signumDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double signum(double)"},{"name":"asin","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double asin(double)"},{"name":"acos","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double acos(double)"},{"name":"atan","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double atan(double)"},{"name":"toRadians","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double toRadians(double)"},{"name":"toDegrees","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double toDegrees(double)"},{"name":"cbrt","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double cbrt(double)"},{"name":"IEEEremainder","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double IEEEremainder(double,double)"},{"name":"ceil","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double ceil(double)"},{"name":"floor","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double floor(double)"},{"name":"rint","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double rint(double)"},{"name":"roundFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"int round(float)"},{"name":"roundDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"long round(double)"},{"name":"ulpDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double ulp(double)"},{"name":"ulpFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float ulp(float)"},{"name":"sinh","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double sinh(double)"},{"name":"cosh","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double cosh(double)"},{"name":"tanh","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double tanh(double)"},{"name":"hypot","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double hypot(double,double)"},{"name":"expm1","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double expm1(double)"},{"name":"log1p","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double log1p(double)"},{"name":"copySignFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float copySign(float,float)"},{"name":"copySignDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double copySign(double,double)"},{"name":"nextAfterDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double nextAfter(double,double)"},{"name":"nextAfterFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float nextAfter(float,double)"},{"name":"nextUpFloat","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"float nextUp(float)"},{"name":"nextUpDouble","prefix":"math","description":null,"functionClass":"java.lang.Math","functionSignature":"double nextUp(double)"},{"name":"eval","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.Object eval(java.lang.String,java.lang.Object[])"},{"name":"var","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.Object robotVar(java.lang.String)"},{"name":"convertUnicode","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String convertUnicode(java.lang.String)"},{"name":"getMillis","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.Long getMillis(java.lang.String)"},{"name":"concatMillis","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String concatMillis(java.lang.String)"},{"name":"md5","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String md5(java.lang.String)"},{"name":"parseDouble","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String parseDouble(java.lang.String, java.lang.String)"},{"name":"formatDouble","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String formatDouble(java.lang.Double, java.lang.String)"},{"name":"resource","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String resource(java.lang.String)"},{"name":"replaceVars","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String replaceVars(java.lang.String)"},{"name":"concat","prefix":null,"description":"\n      Concatenates the strings specified.\n\n      Example:\n      | ${str}=    | EL Evaluate | $[concat('hello', ' ', 'world')] |\n    ","functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String concat(java.lang.Object[])"},{"name":"join","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String join(java.lang.String, java.lang.Object[])"},{"name":"substring","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.String substring(java.lang.String,java.lang.Integer[])"},{"name":"in","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"boolean in(java.lang.String[])"},{"name":"inFile","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"boolean inFile(java.lang.String[])"},{"name":"doCase","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.Object doCase(java.lang.Object[])"},{"name":"doMap","prefix":null,"description":null,"functionClass":"org.jspringbot.keyword.expression.ELUtils","functionSignature":"java.lang.Object doMap(java.lang.Object[])"},{"name":"now","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String now(java.lang.String[])"},{"name":"current","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String current(java.lang.String[])"},{"name":"midnight","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String midnight(java.lang.String[])"},{"name":"firstDayOfYear","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String firstDayOfYear(java.lang.String[])"},{"name":"firstDayOfMonth","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String firstDayOfMonth(java.lang.String[])"},{"name":"lastDayOfMonth","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String lastDayOfMonth(java.lang.String[])"},{"name":"parse","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String parse(java.lang.String[])"},{"name":"toUtilDate","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.util.Date toUtilDate(java.lang.String[])"},{"name":"toSQLDate","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.sql.Date toSQLDate(java.lang.String[])"},{"name":"toSQLTime","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.sql.Time toSQLTime(java.lang.String[])"},{"name":"isBeforeNow","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.Boolean isBeforeNow(java.lang.String[])"},{"name":"isoParse","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.lang.String isoParse(java.lang.String)"},{"name":"toSQLTimestamp","prefix":"date","description":null,"functionClass":"org.jspringbot.keyword.date.DateUtils","functionSignature":"java.sql.Timestamp toSQLTimestamp(java.lang.String[])"},{"name":"objects","prefix":"json","description":null,"functionClass":"org.jspringbot.keyword.json.JSONUtils","functionSignature":"java.util.List objects(java.lang.Object[])"},{"name":"object","prefix":"json","description":null,"functionClass":"org.jspringbot.keyword.json.JSONUtils","functionSignature":"net.minidev.json.JSONObject object(java.lang.Object[])"},{"name":"propertyNames","prefix":"json","description":null,"functionClass":"org.jspringbot.keyword.json.JSONUtils","functionSignature":"java.util.List propertyNames(java.lang.String[])"},{"name":"property","prefix":"json","description":null,"functionClass":"org.jspringbot.keyword.json.JSONUtils","functionSignature":"java.lang.Object property(java.lang.Object[])"},{"name":"attr","prefix":"xml","description":null,"functionClass":"org.jspringbot.keyword.xml.XMLUtils","functionSignature":"java.lang.String attr(java.lang.Object[])"},{"name":"text","prefix":"xml","description":null,"functionClass":"org.jspringbot.keyword.xml.XMLUtils","functionSignature":"java.lang.String text(java.lang.Object[])"},{"name":"elements","prefix":"xml","description":null,"functionClass":"org.jspringbot.keyword.xml.XMLUtils","functionSignature":"java.util.List elements(java.lang.Object[])"},{"name":"element","prefix":"xml","description":null,"functionClass":"org.jspringbot.keyword.xml.XMLUtils","functionSignature":"org.w3c.dom.Element element(java.lang.Object[])"}]